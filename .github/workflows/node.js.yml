# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches-ignore:
      - 'dependabot/*'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: npm install, build and test frontend
        run: |
          cd frontend
          npm install
          npm run build --if-present
        env:
          CI: false
  
  deploy_dev:
    - name: Deploy to Development
      if: ${{ github.ref == 'refs/heads/development' }}
      needs: [build]
      runs-on: ubuntu-latest
      environment: Development

    steps: 
      - name: npm install and build
          env:
            AWS_ACCESS_KEY_ID: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          run: |
            npm install
            npx sst deploy --stage dev

  deploy_stag:
    - name: Deploy to Staging
      if: ${{ github.ref == 'refs/heads/staging' }}
      needs: [deploy_dev]
      runs-on: ubuntu-latest
      environment: Staging

    steps: 
      - name: npm install and build
          env:
            AWS_ACCESS_KEY_ID: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          run: |
            npm install
            npx sst deploy --stage stag

  deploy_prod:
    - name: Deploy to Production
      if: ${{ github.ref == 'refs/heads/production' }}
      needs: [deploy_stag]
      runs-on: ubuntu-latest
      environment: Production

    steps: 
      - name: npm install and build
          env:
            AWS_ACCESS_KEY_ID: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          run: |
            npm install
            npx sst deploy --stage prod

